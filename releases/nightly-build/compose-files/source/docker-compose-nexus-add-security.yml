# /*******************************************************************************
#  * Copyright 2020 Intel Corporation.
#  *
#  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
#  * in compliance with the License. You may obtain a copy of the License at
#  *
#  * http://www.apache.org/licenses/LICENSE-2.0
#  *
#  * Unless required by applicable law or agreed to in writing, software distributed under the License
#  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#  * or implied. See the License for the specific language governing permissions and limitations under
#  * the License.
#  *
#  * @author: Leonard Goodell
#  * EdgeX Foundry, Hanoi, version "master"
#  * added: May, 2020
#  *******************************************************************************/

version: '3.7'

volumes:
  vault-init:
  vault-config:
  vault-file:
  vault-logs:
  kong:
  # non-shared volumes
  postgres-data:
  secrets-setup-cache:

services:
  consul:
    environment:
      SECRETSTORE_SETUP_DONE_FLAG: /tmp/edgex/secrets/edgex-consul/.secretstore-setup-done
      EDGEX_SECURE: "true"
    volumes:
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-consul:/tmp/edgex/secrets/edgex-consul:ro,z
      - /tmp/edgex/secrets/edgex-vault:/tmp/edgex/secrets/edgex-vault:ro,z
      - /tmp/edgex/secrets/edgex-kong:/tmp/edgex/secrets/edgex-kong:ro,z
    depends_on:
      - security-secrets-setup

  vault:
    image: vault:${VAULT_VERSION}
    container_name: edgex-vault
    hostname: edgex-vault
    networks:
      - edgex-network
    ports:
      - "127.0.0.1:8200:8200"
    cap_add:
      - "IPC_LOCK"
    tmpfs:
      - /vault/config
    entrypoint: ["/vault/init/start_vault.sh"]
    environment:
      VAULT_ADDR: https://edgex-vault:8200
      VAULT_CONFIG_DIR: /vault/config
      VAULT_UI: "true"
    volumes:
      - vault-file:/vault/file:z
      - vault-logs:/vault/logs:z
      - vault-init:/vault/init:ro,z
      - /tmp/edgex/secrets/edgex-vault:/tmp/edgex/secrets/edgex-vault:ro,z
    depends_on:
      - consul
      - security-secrets-setup

  security-secrets-setup:
    image: ${CORE_EDGEX_REPOSITORY}/docker-edgex-secrets-setup-go${ARCH}:${CORE_EDGEX_VERSION}${DEV}
    container_name: edgex-secrets-setup
    hostname: edgex-secrets-setup
    env_file:
      - database-security.env
    read_only: true
    tmpfs:
      - /tmp
      - /run
    command: "generate"
    volumes:
      - secrets-setup-cache:/etc/edgex/pki
      - vault-init:/vault/init:z
      - /tmp/edgex/secrets:/tmp/edgex/secrets:z

  vault-worker:
    image: ${CORE_EDGEX_REPOSITORY}/docker-edgex-security-secretstore-setup-go${ARCH}:${CORE_EDGEX_VERSION}${DEV}
    container_name: edgex-vault-worker
    hostname: edgex-vault-worker
    env_file:
      - database-security.env
    environment:
      SECRETSTORE_SETUP_DONE_FLAG: /tmp/edgex/secrets/edgex-consul/.secretstore-setup-done
    read_only: true
    networks:
      - edgex-network
    tmpfs:
      - /run
      - /vault
    volumes:
      - vault-config:/vault/config:z
      - consul-scripts:/consul/scripts:ro,z
      - /tmp/edgex/secrets:/tmp/edgex/secrets:z
    depends_on:
      - security-secrets-setup
      - consul
      - vault

# containers for reverse proxy
  kong-db:
    image: postgres:${POSTGRES_VERSION}
    container_name: kong-db
    hostname: kong-db
    read_only: true
    networks:
      - edgex-network
    ports:
        - "127.0.0.1:5432:5432"
    tmpfs:
      - /var/run
      - /tmp
      - /run
    volumes:
      - postgres-data:/var/lib/postgresql/data:z
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: ${KONG_POSTGRES_PASSWORD:-kong}
    depends_on:
      - security-secrets-setup

  kong-migrations:
    image: kong:${KONG_VERSION}${KONG_UBUNTU}
    container_name: kong-migrations
    read_only: true
    networks:
      - edgex-network
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: ${KONG_POSTGRES_PASSWORD:-kong}
    command: >
      /bin/sh -cx 
      'until /consul/scripts/consul-svc-healthy.sh kong-db;
         do sleep 1;
      done && kong migrations bootstrap;
      kong migrations list;
      code=$$?;
      if [ $$code -eq 5 ]; then
        kong migrations up && kong migrations finish;
      fi'
    tmpfs:
      - /tmp
    volumes:
      - consul-scripts:/consul/scripts:ro,z
    depends_on:
      - consul
      - kong-db

  kong:
    image: kong:${KONG_VERSION}${KONG_UBUNTU}
    container_name: kong
    hostname: kong
    read_only: true
    networks:
      - edgex-network
    ports:
        - "8000:8000"
        - "127.0.0.1:8001:8001"
        - "8443:8443"
        - "127.0.0.1:8444:8444"
    tty: true
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: ${KONG_POSTGRES_PASSWORD:-kong}
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
    restart: on-failure
    tmpfs:
      - /run
      - /tmp
    command: >
      /bin/sh -c 
      "until /consul/scripts/consul-svc-healthy.sh kong-migrations; do sleep 1; done;
      /docker-entrypoint.sh kong docker-start"
    volumes:
      - kong:/usr/local/kong
      - consul-scripts:/consul/scripts:ro,z
    depends_on:
      - consul
      - kong-db
      - kong-migrations

  edgex-proxy:
    image: ${CORE_EDGEX_REPOSITORY}/docker-edgex-security-proxy-setup-go${ARCH}:${CORE_EDGEX_VERSION}${DEV}
    container_name: edgex-proxy
    hostname: edgex-proxy
    entrypoint: >
      /bin/sh -c 
      "until /consul/scripts/consul-svc-healthy.sh kong; do sleep 1; done;
      until /consul/scripts/consul-svc-healthy.sh security-secretstore-setup; do sleep 1; done;
      /edgex/security-proxy-setup --init=true"
    read_only: true
    networks:
      - edgex-network
    env_file:
      - common.env
      - common-security.env
    environment:
      KONGURL_SERVER: kong
      SECRETSERVICE_SERVER: edgex-vault
      SECRETSERVICE_TOKENPATH: /tmp/edgex/secrets/edgex-security-proxy-setup/secrets-token.json
      SECRETSERVICE_CACERTPATH: /tmp/edgex/secrets/ca/ca.pem
      SECRETSERVICE_SNIS: "edgex-kong"
    volumes:
      - consul-scripts:/consul/scripts:ro,z
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-security-proxy-setup:/tmp/edgex/secrets/edgex-security-proxy-setup:ro,z
    depends_on:
      - consul
      - vault-worker
      - kong

# end of containers for reverse proxy

  database:
    env_file:
      - database-security.env
    command: |
      /bin/sh -c "
      until [ -r $${REDIS5_PASSWORD_PATHNAME} ] && [ -s $${REDIS5_PASSWORD_PATHNAME} ]; do sleep 1; done
      exec /usr/local/bin/docker-entrypoint.sh --requirepass `cat $${REDIS5_PASSWORD_PATHNAME}` \
        --dir /data \
        --save 900 1 \
        --save 300 10 \
        --save 60 10000
      "
    volumes:
      - /tmp/edgex/secrets/edgex-redis:/tmp/edgex/secrets/edgex-redis:z
    depends_on:
      - vault-worker

  notifications:
    env_file:
      - common-security.env
    environment:
      SECRETSTORE_TOKENFILE: /tmp/edgex/secrets/edgex-support-notifications/secrets-token.json
    volumes:
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-support-notifications:/tmp/edgex/secrets/edgex-support-notifications:ro,z
    depends_on:
      - vault-worker

  metadata:
    env_file:
      - common-security.env
    environment:
      SECRETSTORE_TOKENFILE: /tmp/edgex/secrets/edgex-core-metadata/secrets-token.json
    volumes:
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-core-metadata:/tmp/edgex/secrets/edgex-core-metadata:ro,z
    depends_on:
      - vault-worker

  data:
    env_file:
      - common-security.env
    environment:
      SECRETSTORE_TOKENFILE: /tmp/edgex/secrets/edgex-core-data/secrets-token.json
    volumes:
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-core-data:/tmp/edgex/secrets/edgex-core-data:ro,z
    depends_on:
      - vault-worker

  command:
    env_file:
      - common-security.env
    environment:
      SECRETSTORE_TOKENFILE: /tmp/edgex/secrets/edgex-core-command/secrets-token.json
    volumes:
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-core-command:/tmp/edgex/secrets/edgex-core-command:ro,z
    depends_on:
      - vault-worker

  scheduler:
    env_file:
      - common-security.env
    environment:
      SECRETSTORE_TOKENFILE: /tmp/edgex/secrets/edgex-support-scheduler/secrets-token.json
    volumes:
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-support-scheduler:/tmp/edgex/secrets/edgex-support-scheduler:ro,z
    depends_on:
      - vault-worker
