# /*******************************************************************************
#  * Copyright 2020 Redis Labs
#  * Copyright 2020 Intel Corporation.
#  *
#  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
#  * in compliance with the License. You may obtain a copy of the License at
#  *
#  * http://www.apache.org/licenses/LICENSE-2.0
#  *
#  * Unless required by applicable law or agreed to in writing, software distributed under the License
#  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#  * or implied. See the License for the specific language governing permissions and limitations under
#  * the License.
#  *
#  * @author: Andre Srinivasan, Redis Labs
#  * @author: Leonard Goodell, Intel
#  * EdgeX Foundry, Geneva, version 1.2.0
#  * added: May 14, 2020
#  *******************************************************************************/

version: '3.4'

# all common shared environment variables defined here:
x-common-env-variables: &common-variables
  Registry_Host: edgex-core-consul
  Clients_CoreData_Host: edgex-core-data
  Clients_Data_Host: edgex-core-data # For device Services
  Clients_Notifications_Host: edgex-support-notifications
  Clients_Metadata_Host: edgex-core-metadata
  Clients_Command_Host: edgex-core-command
  Clients_Scheduler_Host: edgex-support-scheduler
  Clients_RulesEngine_Host: edgex-kuiper
  Clients_VirtualDevice_Host: edgex-device-virtual
  Databases_Primary_Type: redisdb
  Databases_Primary_Host: edgex-redis
  Databases_Primary_Port: 6379
  SecretStore_Host: edgex-vault
  SecretStore_ServerName: edgex-vault
  SecretStore_RootCaCertPath: /tmp/edgex/secrets/ca/ca.pem
  # Required in case old configuration from previous release used.
  # Change to "true" if re-enabling logging service for remote logging
  Logging_EnableRemote: "false"
  #  Clients_Logging_Host: edgex-support-logging # un-comment if re-enabling logging service for remote logging

# REDIS5_PASSWORD_PATHNAME must have the same value as
# security-secretstore-read/res/configuration.toml SecretStore.Passwordfile. Note edgex-go issue
# #2503 that will address this.
x-redis5-env-variables: &redis5-variables
  REDIS5_PASSWORD_PATHNAME: /tmp/edgex/secrets/edgex-redis/redis5-password

volumes:
  db-data:
  log-data:
  consul-config:
  consul-data:
  consul-scripts:
  vault-init:
  vault-config:
  vault-file:
  vault-logs:
  # non-shared volumes
  secrets-setup-cache:

services:
  consul:
    image: edgexfoundry/docker-edgex-consul-arm64:1.2.0
    ports:
      - "127.0.0.1:8400:8400"
      - "127.0.0.1:8500:8500"
    container_name: edgex-core-consul
    hostname: edgex-core-consul
    networks:
      - edgex-network
    volumes:
      - consul-config:/consul/config:z
      - consul-data:/consul/data:z
      - consul-scripts:/consul/scripts:z
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-consul:/tmp/edgex/secrets/edgex-consul:ro,z
      - /tmp/edgex/secrets/edgex-vault:/tmp/edgex/secrets/edgex-vault:ro,z
      - /tmp/edgex/secrets/edgex-kong:/tmp/edgex/secrets/edgex-kong:ro,z
    environment:
      - "SECRETSTORE_SETUP_DONE_FLAG=/tmp/edgex/secrets/edgex-consul/.secretstore-setup-done"
      - EDGEX_DB=redis
      - EDGEX_SECURE=true
    depends_on:
      - security-secrets-setup

  vault:
    image: vault:1.3.1
    container_name: edgex-vault
    hostname: edgex-vault
    networks:
      - edgex-network
    ports:
      - "127.0.0.1:8200:8200"
    cap_add:
      - "IPC_LOCK"
    tmpfs:
      - /vault/config
    entrypoint: ["/vault/init/start_vault.sh"]
    environment:
      - VAULT_ADDR=https://edgex-vault:8200
      - VAULT_CONFIG_DIR=/vault/config
      - VAULT_UI=true
    volumes:
      - vault-file:/vault/file:z
      - vault-logs:/vault/logs:z
      - vault-init:/vault/init:ro,z
      - /tmp/edgex/secrets/edgex-vault:/tmp/edgex/secrets/edgex-vault:ro,z
    depends_on:
      - consul
      - security-secrets-setup

  security-secrets-setup:
    image: edgexfoundry/docker-edgex-secrets-setup-go-arm64:1.2.1
    container_name: edgex-secrets-setup
    hostname: edgex-secrets-setup
    environment:
      <<: *redis5-variables
    tmpfs:
      - /tmp
      - /run
    command: "generate"
    volumes:
      - secrets-setup-cache:/etc/edgex/pki
      - vault-init:/vault/init:z
      - /tmp/edgex/secrets:/tmp/edgex/secrets:z

  vault-worker:
    image: edgexfoundry/docker-edgex-security-secretstore-setup-go-arm64:1.2.1
    container_name: edgex-vault-worker
    hostname: edgex-vault-worker
    environment:
      <<: *redis5-variables
      SECRETSTORE_SETUP_DONE_FLAG: /tmp/edgex/secrets/edgex-consul/.secretstore-setup-done
    networks:
      - edgex-network
    tmpfs:
      - /run
    volumes:
      - vault-config:/vault/config:z
      - consul-scripts:/consul/scripts:ro,z
      - /tmp/edgex/secrets:/tmp/edgex/secrets:z
    depends_on:
      - security-secrets-setup
      - consul
      - vault

# containers for reverse proxy
  kong-db:
    image: postgres:12.1-alpine
    container_name: kong-db
    hostname: kong-db
    networks:
      - edgex-network
    ports:
        - "127.0.0.1:5432:5432"
    environment:
        - 'POSTGRES_DB=kong'
        - 'POSTGRES_USER=kong'
        - 'POSTGRES_PASSWORD=${KONG_POSTGRES_PASSWORD:-kong}'
    depends_on:
      - security-secrets-setup

  kong-migrations:
    image: kong:${KONG_VERSION:-2.0.1}-ubuntu
    container_name: kong-migrations
    networks:
      - edgex-network
    environment:
        - 'KONG_DATABASE=postgres'
        - 'KONG_PG_HOST=kong-db'
        - 'KONG_PG_PASSWORD=${KONG_POSTGRES_PASSWORD:-kong}'
    command: >
      /bin/sh -cx 
      'until /consul/scripts/consul-svc-healthy.sh kong-db;
         do sleep 1;
      done && kong migrations bootstrap;
      kong migrations list;
      code=$$?;
      if [ $$code -eq 5 ]; then
        kong migrations up && kong migrations finish;
      fi'
    volumes:
      - consul-scripts:/consul/scripts:ro,z
    depends_on:
      - consul
      - kong-db

  kong:
    image: kong:${KONG_VERSION:-2.0.1}-ubuntu
    container_name: kong
    hostname: kong
    networks:
      - edgex-network
    ports:
        - "8000:8000"
        - "127.0.0.1:8001:8001"
        - "8443:8443"
        - "127.0.0.1:8444:8444"
    tty: true
    environment:
        - 'KONG_DATABASE=postgres'
        - 'KONG_PG_HOST=kong-db'
        - 'KONG_PG_PASSWORD=${KONG_POSTGRES_PASSWORD:-kong}'
        - 'KONG_PROXY_ACCESS_LOG=/dev/stdout'
        - 'KONG_ADMIN_ACCESS_LOG=/dev/stdout'
        - 'KONG_PROXY_ERROR_LOG=/dev/stderr'
        - 'KONG_ADMIN_ERROR_LOG=/dev/stderr'
        - 'KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl'
    restart: on-failure
    command: >
      /bin/sh -c 
      "until /consul/scripts/consul-svc-healthy.sh kong-migrations; do sleep 1; done;
      /docker-entrypoint.sh kong docker-start"
    volumes:
      - consul-scripts:/consul/scripts:ro,z
    depends_on:
      - consul
      - kong-db
      - kong-migrations

  edgex-proxy:
    image: edgexfoundry/docker-edgex-security-proxy-setup-go-arm64:1.2.1
    container_name: edgex-proxy
    hostname: edgex-proxy
    entrypoint: >
      /bin/sh -c 
      "until /consul/scripts/consul-svc-healthy.sh kong; do sleep 1; done;
      until /consul/scripts/consul-svc-healthy.sh security-secretstore-setup; do sleep 1; done;
      /edgex/security-proxy-setup --init=true"
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      KongURL_Server: kong
      SecretService_Server: edgex-vault
      SecretService_TokenPath: /tmp/edgex/secrets/edgex-security-proxy-setup/secrets-token.json
      SecretService_CACertPath: /tmp/edgex/secrets/ca/ca.pem
      SecretService_SNIS: "edgex-kong"
    volumes:
      - consul-scripts:/consul/scripts:ro,z
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-security-proxy-setup:/tmp/edgex/secrets/edgex-security-proxy-setup:ro,z
    depends_on:
      - consul
      - vault-worker
      - kong

# end of containers for reverse proxy

  redis:
    image: arm64v8/redis:5.0.8-alpine
    ports:
      - "127.0.0.1:6379:6379"
    container_name: edgex-redis
    hostname: edgex-redis
    environment:
      <<: *redis5-variables
    command: |
      /bin/sh -c "
      until [ -r $${REDIS5_PASSWORD_PATHNAME} ] && [ -s $${REDIS5_PASSWORD_PATHNAME} ]; do sleep 1; done
      exec /usr/local/bin/docker-entrypoint.sh --requirepass `cat $${REDIS5_PASSWORD_PATHNAME}` \
        --dir /data \
        --save 900 1 \
        --save 300 10 \
        --save 60 10000
      "
    networks:
      - edgex-network
    volumes:
      - db-data:/data:z
      - /tmp/edgex/secrets/edgex-redis:/tmp/edgex/secrets/edgex-redis:z
    depends_on:
      - vault-worker

# The logging service has been deprecated in Geneva release and will be removed in the Hanoi release.
# All services are configure to send logging to STDOUT, i.e. not remote which requires this logging service
# If you still must use remote logging, un-comment the block below, all the related depends that have been commented out
# and the related global override that are commented out at the top.
#
#  logging:
#    image: edgexfoundry/docker-support-logging-go-arm64:1.2.1
#    ports:
#      - "127.0.0.1:48061:48061"
#    container_name: edgex-support-logging
#    hostname: edgex-support-logging
#    networks:
#      - edgex-network
#    environment:
#      <<: *common-variables
#      SecretStore_TokenFile: /tmp/edgex/secrets/edgex-support-logging/secrets-token.json
#      Service_Host: edgex-support-logging
#      Writable_Persistence: file
#      Databases_Primary_Type: file
#      Logging_EnableRemote: "false"
#    volumes:
#      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
#      - /tmp/edgex/secrets/edgex-support-logging:/tmp/edgex/secrets/edgex-support-logging:ro,z
#    depends_on:
#      - consul
#      - vault-worker

  system:
    image: edgexfoundry/docker-sys-mgmt-agent-go-arm64:1.2.1
    ports:
      - "127.0.0.1:48090:48090"
    container_name: edgex-sys-mgmt-agent
    hostname: edgex-sys-mgmt-agent
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-sys-mgmt-agent
      ExecutorPath: /sys-mgmt-executor
      MetricsMechanism: executor
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:z
    depends_on:
      - consul
#      - logging  # uncomment if re-enabled remote logging
      - scheduler
      - notifications
      - metadata
      - data
      - command

  notifications:
    image: edgexfoundry/docker-support-notifications-go-arm64:1.2.1
    ports:
      - "127.0.0.1:48060:48060"
    container_name: edgex-support-notifications
    hostname: edgex-support-notifications
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-support-notifications
      SecretStore_TokenFile: /tmp/edgex/secrets/edgex-support-notifications/secrets-token.json
    volumes:
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-support-notifications:/tmp/edgex/secrets/edgex-support-notifications:ro,z
    depends_on:
      - consul
#      - logging  # uncomment if re-enabled remote logging
      - redis
      - vault-worker

  metadata:
    image: edgexfoundry/docker-core-metadata-go-arm64:1.2.1
    ports:
      - "127.0.0.1:48081:48081"
    container_name: edgex-core-metadata
    hostname: edgex-core-metadata
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-core-metadata
      Service_Timeout: "20000"
      Notifications_Sender: edgex-core-metadata
      SecretStore_TokenFile: /tmp/edgex/secrets/edgex-core-metadata/secrets-token.json
    volumes:
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-core-metadata:/tmp/edgex/secrets/edgex-core-metadata:ro,z
    depends_on:
      - consul
#      - logging  # uncomment if re-enabled remote logging
      - redis
      - notifications
      - vault-worker

  data:
    image: edgexfoundry/docker-core-data-go-arm64:1.2.1
    ports:
      - "127.0.0.1:48080:48080"
      - "127.0.0.1:5563:5563"
    container_name: edgex-core-data
    hostname: edgex-core-data
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-core-data
      SecretStore_TokenFile: /tmp/edgex/secrets/edgex-core-data/secrets-token.json
    volumes:
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-core-data:/tmp/edgex/secrets/edgex-core-data:ro,z
    depends_on:
      - consul
#      - logging  # uncomment if re-enabled remote logging
      - redis
      - metadata
      - vault-worker

  command:
    image: edgexfoundry/docker-core-command-go-arm64:1.2.1
    ports:
      - "127.0.0.1:48082:48082"
    container_name: edgex-core-command
    hostname: edgex-core-command
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-core-command
      SecretStore_TokenFile: /tmp/edgex/secrets/edgex-core-command/secrets-token.json
    volumes:
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-core-command:/tmp/edgex/secrets/edgex-core-command:ro,z
    depends_on:
      - consul
#      - logging  # uncomment if re-enabled remote logging
      - redis
      - metadata
      - vault-worker

  scheduler:
    image: edgexfoundry/docker-support-scheduler-go-arm64:1.2.1
    ports:
      - "127.0.0.1:48085:48085"
    container_name: edgex-support-scheduler
    hostname: edgex-support-scheduler
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-support-scheduler
      IntervalActions_ScrubPushed_Host: edgex-core-data
      IntervalActions_ScrubAged_Host: edgex-core-data
      SecretStore_TokenFile: /tmp/edgex/secrets/edgex-support-scheduler/secrets-token.json
    volumes:
      - /tmp/edgex/secrets/ca:/tmp/edgex/secrets/ca:ro,z
      - /tmp/edgex/secrets/edgex-support-scheduler:/tmp/edgex/secrets/edgex-support-scheduler:ro,z
    depends_on:
      - consul
#      - logging  # uncomment if re-enabled remote logging
      - redis
      - vault-worker

  app-service-rules:
    image: edgexfoundry/docker-app-service-configurable-arm64:1.2.0
    ports:
      - "127.0.0.1:48100:48100"
    container_name: edgex-app-service-configurable-rules
    hostname: edgex-app-service-configurable-rules
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      EDGEX_SECURITY_SECRET_STORE: "false" # required since SecretStore not used and not configured
      edgex_profile: rules-engine
      Service_Host: edgex-app-service-configurable-rules
      Service_Port: 48100
      MessageBus_SubscribeHost_Host: edgex-core-data
      Binding_PublishTopic: events
    depends_on:
      - consul
#      - logging  # uncomment if re-enabled remote logging
      - data
      - vault-worker

  rulesengine:
    image: emqx/kuiper:0.4.2-alpine
    ports:
      - "127.0.0.1:48075:48075"
      - "127.0.0.1:20498:20498"
    container_name: edgex-kuiper
    hostname: edgex-kuiper
    networks:
      - edgex-network
    environment:
      # KUIPER_DEBUG: "true"
      KUIPER_CONSOLE_LOG: "true"
      KUIPER_REST_PORT: 48075
      EDGEX_SERVER: edgex-app-service-configurable-rules
      EDGEX_SERVICE_SERVER: http://edgex-core-data:48080
      EDGEX_TOPIC: events
      EDGEX_PROTOCOL: tcp
      EDGEX_PORT: 5566
    depends_on:
      - app-service-rules

  # Support RulesEngine has been deprecated in the Geneva (1.2.0) release
  # If still required, simply uncomment the block below and comment out the block above.
  #
  # rulesengine:
  #   image: edgexfoundry/docker-support-rulesengine-arm64:1.2.1
  #   ports:
  #     - "127.0.0.1:48075:48075"
  #   container_name: edgex-support-rulesengine
  #   hostname: edgex-support-rulesengine
  #   networks:
  #     - edgex-network
  #   depends_on:
  #     - app-service-rules

#################################################################
# Device Services
#################################################################

  device-virtual:
    image: edgexfoundry/docker-device-virtual-go-arm64:1.2.2
    ports:
    - "127.0.0.1:49990:49990"
    container_name: edgex-device-virtual
    hostname: edgex-device-virtual
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-device-virtual
    depends_on:
      - consul
#      - logging  # uncomment if re-enabled remote logging
      - data
      - metadata

  device-rest:
    image: edgexfoundry/docker-device-rest-go-arm64:1.1.1
    ports:
      - "127.0.0.1:49986:49986"
    container_name: edgex-device-rest
    hostname: edgex-device-rest
    networks:
      - edgex-network
    environment:
      <<: *common-variables
      Service_Host: edgex-device-rest
    depends_on:
      - data
      - command
  #      - logging  # uncomment if re-enabled remote logging

#  device-random:
#    image: edgexfoundry/docker-device-random-go-arm64:1.2.1
#    ports:
#      - "127.0.0.1:49988:49988"
#    container_name: edgex-device-random
#    hostname: edgex-device-random
#    networks:
#      - edgex-network
#    environment:
#      <<: *common-variables
#      Service_Host: edgex-device-random
#    depends_on:
#      - data
#      - command
#
#  device-mqtt:
#    image: edgexfoundry/docker-device-mqtt-go-arm64:1.2.1
#    ports:
#      - "127.0.0.1:49982:49982"
#    container_name: edgex-device-mqtt
#    hostname: edgex-device-mqtt
#    networks:
#      - edgex-network
#    environment:
#      <<: *common-variables
#      Service_Host: edgex-device-mqtt
#    depends_on:
#      - data
#      - command
#
#  device-modbus:
#    image: edgexfoundry/docker-device-modbus-go-arm64:1.2.1
#    ports:
#      - "127.0.0.1:49991:49991"
#    container_name: edgex-device-modbus
#    hostname: edgex-device-modbus
#    networks:
#      - edgex-network
#    environment:
#      <<: *common-variables
#      Service_Host: edgex-device-modbus
#    depends_on:
#      - data
#      - command
#
#  device-snmp:
#    image: edgexfoundry/docker-device-snmp-go-arm64:1.2.1
#    ports:
#      - "127.0.0.1:49993:49993"
#    container_name: edgex-device-snmp
#    hostname: edgex-device-snmp
#    networks:
#      - edgex-network
#    environment:
#      <<: *common-variables
#      Service_Host: edgex-device-snmp
#    depends_on:
#      - data
#      - command

networks:
  edgex-network:
    driver: "bridge"
