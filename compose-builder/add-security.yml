# /*******************************************************************************
#  * Copyright 2021 Intel Corporation.
#  *
#  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
#  * in compliance with the License. You may obtain a copy of the License at
#  *
#  * http://www.apache.org/licenses/LICENSE-2.0
#  *
#  * Unless required by applicable law or agreed to in writing, software distributed under the License
#  * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
#  * or implied. See the License for the specific language governing permissions and limitations under
#  * the License.
#  *
#  * @author: Leonard Goodell
#  * EdgeX Foundry, Hanoi, version "master"
#  * added: May, 2020
#  *******************************************************************************/

version: '3.7'

volumes:
  edgex-init:
  vault-config:
  vault-file:
  vault-logs:
  kong:
  postgres-config:
  # non-shared volumes
  postgres-data:

services:
  security-bootstrapper:
    image: ${CORE_EDGEX_REPOSITORY}/docker-security-bootstrapper-go${ARCH}:${CORE_EDGEX_VERSION}${DEV}
    container_name: edgex-security-bootstrapper
    hostname: edgex-security-bootstrapper
    networks:
      - edgex-network
    read_only: true
    env_file:
      - common-sec-stage-gate.env
    environment:
      EDGEX_USER: ${EDGEX_USER}
      EDGEX_GROUP: ${EDGEX_GROUP}
    volumes:
      - edgex-init:/edgex-init:z
    security_opt:
      - no-new-privileges:true

  database:
    entrypoint: ["/edgex-init/redis_wait_install.sh"]
    env_file:
      - common.env
      - common-security.env
      - common-sec-stage-gate.env
    environment:
      SECRETSTORE_TOKENFILE: /tmp/edgex/secrets/edgex-security-bootstrap-redis/secrets-token.json
    volumes:
      - edgex-init:/edgex-init:ro,z
      - /tmp/edgex/secrets/edgex-security-bootstrap-redis:/tmp/edgex/secrets/edgex-security-bootstrap-redis:ro,z
    depends_on:
      - security-bootstrapper
      - secretstore-setup

  consul:
    entrypoint: ["/edgex-init/consul_wait_install.sh"]
    env_file:
      # needed for vault host/port
      - common-security.env
      - common-sec-stage-gate.env
    volumes:
      - edgex-init:/edgex-init:ro,z
      - /tmp/edgex/secrets/edgex-consul:/tmp/edgex/secrets/edgex-consul:ro,z
      - /tmp/edgex/secrets/edgex-kong:/tmp/edgex/secrets/edgex-kong:ro,z
    depends_on:
      - security-bootstrapper
      - vault

  vault:
    image: vault:${VAULT_VERSION}
    container_name: edgex-vault
    hostname: edgex-vault
    networks:
      - edgex-network
    ports:
      - "127.0.0.1:8200:8200"
    cap_add:
      - "IPC_LOCK"
    tmpfs:
      - /vault/config
    entrypoint: ["/edgex-init/vault_wait_install.sh"]
    env_file:
      - common-sec-stage-gate.env
    command: server
    environment:
      VAULT_ADDR: http://edgex-vault:8200
      VAULT_CONFIG_DIR: /vault/config
      VAULT_UI: "true"
    volumes:
      - edgex-init:/edgex-init:ro,z
      - vault-file:/vault/file:z
      - vault-logs:/vault/logs:z
    depends_on:
      - security-bootstrapper

  secretstore-setup:
    image: ${CORE_EDGEX_REPOSITORY}/docker-security-secretstore-setup-go${ARCH}:${CORE_EDGEX_VERSION}${DEV}
    container_name: edgex-secretstore-setup
    hostname: edgex-secretstore-setup
    env_file:
      - common-sec-stage-gate.env
    environment:
      EDGEX_USER: ${EDGEX_USER}
      EDGEX_GROUP: ${EDGEX_GROUP}
    read_only: true
    networks:
      - edgex-network
    tmpfs:
      - /run
      - /vault
    volumes:
      - edgex-init:/edgex-init:ro,z
      - vault-config:/vault/config:z
      - /tmp/edgex/secrets:/tmp/edgex/secrets:z
    depends_on:
      - security-bootstrapper
      - vault
    security_opt: 
      - no-new-privileges:true

# containers for reverse proxy
  kong-db:
    image: postgres:${POSTGRES_VERSION}
    container_name: kong-db
    hostname: kong-db
    read_only: true
    networks:
      - edgex-network
    ports:
        - "127.0.0.1:5432:5432"
    tmpfs:
      - /var/run
      - /tmp
      - /run
    volumes:
      - edgex-init:/edgex-init:ro,z
      - postgres-data:/var/lib/postgresql/data:z
      - postgres-config:/tmp/postgres-config:z
    entrypoint: ["/edgex-init/postgres_wait_install.sh"]
    env_file:
      # needed for vault host/port
      - common-security.env
      - common-sec-stage-gate.env
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD_FILE: "${POSTGRES_PASSWORD_FILE:-/tmp/postgres-config/.pgpassword}"
    depends_on:
      - security-bootstrapper
    security_opt: 
      - no-new-privileges:true

  kong:
    image: kong:${KONG_VERSION}
    container_name: kong
    hostname: kong
    read_only: true
    networks:
      - edgex-network
    ports:
        - "8000:8000"
        - "127.0.0.1:8001:8001"
        - "8443:8443"
        - "127.0.0.1:8444:8444"
    tty: true
    entrypoint: ["/edgex-init/kong_wait_install.sh"]
    env_file:
      - common-sec-stage-gate.env
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD_FILE: "${KONG_POSTGRES_PASSWORD_FILE:-/tmp/postgres-config/.pgpassword}"
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
    restart: on-failure
    tmpfs:
      - /run
      - /tmp
    volumes:
      - edgex-init:/edgex-init:ro,z
      - postgres-config:/tmp/postgres-config:z
      - kong:/usr/local/kong
    depends_on:
      - security-bootstrapper
      - kong-db
    security_opt: 
      - no-new-privileges:true

  proxy-setup:
    image: ${CORE_EDGEX_REPOSITORY}/docker-security-proxy-setup-go${ARCH}:${CORE_EDGEX_VERSION}${DEV}
    container_name: edgex-proxy-setup
    hostname: edgex-proxy-setup
    entrypoint: ["/edgex-init/proxy_setup_wait_install.sh"]
    read_only: true
    networks:
      - edgex-network
    env_file:
      - common.env
      - common-sec-stage-gate.env
    environment:
      KONGURL_SERVER: kong
      SECRETSERVICE_SERVER: edgex-vault
      SECRETSERVICE_TOKENPATH: /tmp/edgex/secrets/edgex-security-proxy-setup/secrets-token.json
    volumes:
      - edgex-init:/edgex-init:ro,z
      - /tmp/edgex/secrets/edgex-security-proxy-setup:/tmp/edgex/secrets/edgex-security-proxy-setup:ro,z
    depends_on:
      - security-bootstrapper
      - secretstore-setup
      - kong
    security_opt: 
      - no-new-privileges:true
    user: "${EDGEX_USER}:${EDGEX_GROUP}"

# end of containers for reverse proxy

  notifications:
    env_file:
      - common-security.env
      - common-sec-stage-gate.env
    environment:
      SECRETSTORE_TOKENFILE: /tmp/edgex/secrets/edgex-support-notifications/secrets-token.json
    entrypoint: ["/edgex-init/ready_to_run_wait_install.sh"]
    command: "/support-notifications ${DEFAULT_EDGEX_RUN_CMD_PARMS}"
    volumes:
      - edgex-init:/edgex-init:ro,z
      - /tmp/edgex/secrets/edgex-support-notifications:/tmp/edgex/secrets/edgex-support-notifications:ro,z
    depends_on:
      - security-bootstrapper
      - secretstore-setup
      - database

  metadata:
    env_file:
      - common-security.env
      - common-sec-stage-gate.env
    environment:
      SECRETSTORE_TOKENFILE: /tmp/edgex/secrets/edgex-core-metadata/secrets-token.json
    entrypoint: ["/edgex-init/ready_to_run_wait_install.sh"]
    command: "/core-metadata ${DEFAULT_EDGEX_RUN_CMD_PARMS}"
    volumes:
      - edgex-init:/edgex-init:ro,z
      - /tmp/edgex/secrets/edgex-core-metadata:/tmp/edgex/secrets/edgex-core-metadata:ro,z
    depends_on:
      - security-bootstrapper
      - secretstore-setup
      - database

  data:
    env_file:
      - common-security.env
      - common-sec-stage-gate.env
    environment:
      SECRETSTORE_TOKENFILE: /tmp/edgex/secrets/edgex-core-data/secrets-token.json
    entrypoint: ["/edgex-init/ready_to_run_wait_install.sh"]
    command: "/core-data ${DEFAULT_EDGEX_RUN_CMD_PARMS}"
    volumes:
      - edgex-init:/edgex-init:ro,z
      - /tmp/edgex/secrets/edgex-core-data:/tmp/edgex/secrets/edgex-core-data:ro,z
    depends_on:
      - security-bootstrapper
      - secretstore-setup
      - database

  command:
    env_file:
      - common-security.env
      - common-sec-stage-gate.env
    environment:
      SECRETSTORE_TOKENFILE: /tmp/edgex/secrets/edgex-core-command/secrets-token.json
    entrypoint: ["/edgex-init/ready_to_run_wait_install.sh"]
    command: "/core-command ${DEFAULT_EDGEX_RUN_CMD_PARMS}"
    volumes:
      - edgex-init:/edgex-init:ro,z
      - /tmp/edgex/secrets/edgex-core-command:/tmp/edgex/secrets/edgex-core-command:ro,z
    depends_on:
      - security-bootstrapper
      - secretstore-setup
      - database

  scheduler:
    env_file:
      - common-security.env
      - common-sec-stage-gate.env
    environment:
      SECRETSTORE_TOKENFILE: /tmp/edgex/secrets/edgex-support-scheduler/secrets-token.json
    entrypoint: ["/edgex-init/ready_to_run_wait_install.sh"]
    command: "/support-scheduler ${DEFAULT_EDGEX_RUN_CMD_PARMS}"
    volumes:
      - edgex-init:/edgex-init:ro,z
      - /tmp/edgex/secrets/edgex-support-scheduler:/tmp/edgex/secrets/edgex-support-scheduler:ro,z
    depends_on:
      - security-bootstrapper
      - secretstore-setup
      - database
